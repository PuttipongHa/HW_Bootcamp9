library(tidyverse)
library(mlbench)
library(caret)
library(MLmetrics)

churn <- read.csv("churn.csv")

## 1. split data
set.seed(42)
n <- nrow(churn)
train_id <- sample(1:n, 0.8*n)
train_df <- churn[train_id, ]
test_df <- churn[-train_id, ]

## 2. Transform data
transformer <- preProcess(train_df,method = c("range"))
train_df_z <- predict(transformer,train_df)
test_df_z <- predict(transformer,test_df)

## 4. train model
set.seed(42)
ctrl <- trainControl(method = "repeatedcv",
                     number = 5,
                     repeats = 3,
                     verboseIter = TRUE,
                     summaryFunction = prSummary,
                     classProbs = TRUE)

model <- train(churn ~ totalintlminutes + totalevecharge + totalintlcalls + numbercustomerservicecalls + numbervmailmessages,
               data = train_df_z,
               method = "knn",
               metric = "AUC",
               trControl = ctrl,
               tuneLength = 3)

## 3. score model

pred_churn <- predict(model, newdata = test_df_z)

## 4. evaluate model
test_df_z$churn <- as.factor(test_df_z$churn)
con <- table(test_df_z$churn,pred_churn,dnn = c("actual","preds"))
confusionMatrix(pred_churn, 
                test_df_z$churn, 
                positive = "Yes",
                mode="prec_recall")
